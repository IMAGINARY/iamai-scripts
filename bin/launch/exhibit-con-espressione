#!/bin/bash -l
# This script is supposed to run the Con-Espressione! exhibit.
# The wrapper script is supposed to be visible in ps -a resp. ps -u `id -u` to make
# it easy to kill it (by a script or manually)

PIDS=""
function finish {
    kill $PIDS >/dev/null 2>&1
}
trap finish SIGINT SIGTERM EXIT

# Configuration
ML_IMPACT_MIDI_INPUT_DEFAULT="SOLO Control"
ML_IMPACT_MIDI_INPUT="${CON_ESPRESSIONE_ML_IMPACT_MIDI_INPUT:-$ML_IMPACT_MIDI_INPUT_DEFAULT}"
DARK_MODE_DEFAULT="false"
DARK_MODE="${CON_ESPRESSIONE_DARK_MODE:-$DARK_MODE_DEFAULT}"
SYNTH_DEFAULT=("fluidsynth" "--disable-lash" "--server" "--no-shell" "--gain" "1" "-o" "midi.autoconnect=True" "/opt/con-espressione/soundfonts/Nice-Steinway-v3.9.sf2")
SYNTH=("${CON_ESPRESSIONE_SYNTH[@]:-${SYNTH_DEFAULT[@]}}")


if [[ -z "${CON_ESPRESSIONE_ML_IMPACT_MIDI_INPUT}" ]]; then
  echo "CON_ESPRESSIONE_ML_IMPACT_MIDI_INPUT environment variable not set. Using default value: ${ML_IMPACT_MIDI_INPUT}"
else
  echo "Using CON_ESPRESSIONE_ML_IMPACT_MIDI_INPUT environment variable. Value: ${ML_IMPACT_MIDI_INPUT}"
fi

if [[ -z "${CON_ESPRESSIONE_DARK_MODE}" ]]; then
  echo "CON_ESPRESSIONE_DARK_MODE environment variable not set. Using default value: ${DARK_MODE}"
else
  echo "Using CON_ESPRESSIONE_DARK_MODE environment variable. Value: ${DARK_MODE}"
fi

if [[ -z "${CON_ESPRESSIONE_SYNTH}" ]]; then
  echo "CON_ESPRESSIONE_SYNTH environment variable not set. Using default value: ${SYNTH[*]}"
else
  echo "Using CON_ESPRESSIONE_SYNTH environment variable. Value: ${SYNTH[*]}"
fi


# Launch the expressivness python backend
cd /opt/con-espressione/backend || exit 1
source /opt/con-espressione/miniconda3/bin/activate /opt/con-espressione/conda-environment/
python con_espressione.py &
PIDS="$PIDS $!"

# Wait for the MIDI output
echo -n 'Waiting for con-espressione MIDI output';
until (aconnect -o | grep 'con-espressione'  >/dev/null 2>&1); do
    echo -n .
    sleep 1s &
    PID_SLEEP=$!
    wait $PID_SLEEP
done
echo ' Done.'

# Launch the Pianoteq synthesizer if available
"${SYNTH[@]}" &
PID_SYNTH=$!
PIDS="$PIDS $PID_SYNTH"

# Launch the main UI on the primary display and send the process to the background

ML_IMPACT_MIDI_INPUT_URL_ENCODED="$(python3 -c 'import urllib.parse;print(urllib.parse.quote(input()))' <<< "${ML_IMPACT_MIDI_INPUT}")"

DEBUG_TOOLS="false"
kiosk-browser \
  $KIOSK_OPTS \
  --app-name-suffix=con-espressione-frontend \
  --kiosk \
  --fullscreen \
  --cover-displays=0 \
  --serve=/opt/con-espressione/frontend \
  "src/index.html?darkMode=$DARK_MODE&mlImpactMidiInput=$ML_IMPACT_MIDI_INPUT_URL_ENCODED&showDebugTools=$DEBUG_TOOLS&enableSynth=false" \
&
PID_UI=$!
PIDS="$PIDS $PID_UI"

# Launch menu on secondary display
kiosk-browser \
  $KIOSK_OPTS \
  --app-name-suffix=con-espressione-menu \
  --kiosk \
  --fullscreen \
  --cover-displays=1 \
  --serve=/opt/con-espressione/frontend \
  menu/applauncher2/index.html?cfg=con-espressione \
  &
PID_MENU=$!
PIDS="$PIDS $PID_MENU"

# Wait for the exhibit to finish or until the signal trap is triggered
wait -n $PIDS
